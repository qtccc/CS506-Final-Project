name: Python Flask App CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: 3.12

    - name: Cache pip
      uses: actions/cache@v3
      with:
        path: .venv
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python3.12 -m venv .venv
        . .venv/bin/activate
        pip install --upgrade pip
        pip install -r requirements.txt flake8 black

    - name: Lint code
      run: |
        . .venv/bin/activate
        flake8 --exclude .venv,build,dist,__pycache__

    - name: Run tests
      run: |
        . .venv/bin/activate
        python -m unittest discover -s tests

    - name: Test Flask server
      env:
        FLASK_APP: app.py
        FLASK_ENV: development
      run: |
        . .venv/bin/activate
        flask run --host=0.0.0.0 --port=3000 &
        sleep 10
        curl -f http://127.0.0.1:3000/get_airports || exit 1

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: 3.12

    - name: Install dependencies
      run: |
        python3.12 -m venv .venv
        . .venv/bin/activate
        pip install --upgrade pip
        pip install -r requirements.txt

    - name: Deploy Flask App
      run: |
        echo "Custom deployment logic here"
