name: Python Flask App CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Checkout the repository
    - name: Checkout repository
      uses: actions/checkout@v3

    # Set up Python 3.12
    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: 3.12  # Explicitly use Python 3.12

    # Cache pip dependencies
    - name: Cache pip
      uses: actions/cache@v3
      with:
        path: .venv
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    # Create virtual environment and install dependencies
    - name: Install dependencies
      run: |
        python3.12 -m venv .venv  # Explicitly use Python 3.12
        . .venv/bin/activate
        pip install --upgrade pip
        pip install -r requirements.txt

    # Lint the code
    - name: Lint code
      run: |
        . .venv/bin/activate
        make lint

    # Run tests
    - name: Run tests
      run: |
        . .venv/bin/activate
        make test

    # Test Flask server functionality
    - name: Test Flask server
      env:
        FLASK_APP: app.py
        FLASK_ENV: development
      run: |
        . .venv/bin/activate
        make run &
        sleep 10  # Allow the server to start
        curl -f http://127.0.0.1:3000/get_airports || exit 1

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
    # Checkout the repository
    - name: Checkout repository
      uses: actions/checkout@v3

    # Set up Python 3.12
    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: 3.12

    # Install dependencies
    - name: Install dependencies
      run: |
        python3.12 -m venv .venv  # Explicitly use Python 3.12
        . .venv/bin/activate
        pip install --upgrade pip
        pip install -r requirements.txt

    # Deploy application
    - name: Deploy Flask App
      run: |
        echo "Custom deployment logic here"
